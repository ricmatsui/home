---

- name: deploy temporal web
  gather_facts: false
  hosts: pi
  tags:
    - temporal-web
  tasks:
    - name: clone
      ansible.builtin.git:
        repo: https://github.com/temporalio/web.git
        dest: "{{ playbook_dir}}/../build/temporal-web"
        version: v1.12.0
        depth: 1
        force: true
      delegate_to: localhost

    - name: patch dockerignore
      ansible.builtin.lineinfile:
        path: "{{ playbook_dir }}/../build/temporal-web/.dockerignore"
        line: ".git"
      delegate_to: localhost

    - name: patch dockerfile
      ansible.builtin.lineinfile:
        path: "{{ playbook_dir }}/../build/temporal-web/Dockerfile"
        insertbefore: "# Install app dependencies"
        line: RUN apk add --no-cache python3 build-base
      delegate_to: localhost

    - name: build
      community.docker.docker_image:
        name: "registry.{{ config.domain }}/temporal-web"
        source: build
        force_source: true
        push: true
        timeout: 300
        build:
          pull: false
          path: ../build/temporal-web
          platform: linux/arm64/v8
      delegate_to: localhost
      register: build_result

    - name: deploy stack
      community.general.docker_stack:
        name: temporal-web
        prune: yes
        resolve_image: always
        compose:
          - version: '3.8'
            services:
              temporal-web:
                image: "{{ build_result.image.RepoDigests[0] }}"
                labels:
                  - "traefik.enable=true"
                  - "traefik.http.routers.temporal.rule=Host(`temporal.{{ config.domain }}`)"
                  - "traefik.http.routers.temporal.entrypoints=websecure"
                  - "traefik.http.routers.temporal.tls.certresolver=letsencrypt"
                  - "traefik.http.services.temporal.loadbalancer.server.port=8088"
                environment:
                  TEMPORAL_GRPC_ENDPOINT: "pi.{{ config.domain }}:7233"
                  TEMPORAL_PERMIT_WRITE_API: 'true'
                networks:
                  - traefik_traefik
                logging:
                  driver: none
                deploy:
                  mode: replicated
                  replicas: 1
                  resources:
                    limits:
                      cpus: '1.00'
                      memory: 125M
                  restart_policy:
                    delay: 10m
                  update_config:
                    order: stop-first
            networks:
              traefik_traefik:
                external: true
