---

- name: set dns record
  community.general.cloudflare_dns:
    zone: "{{ config.cloudflare.zone }}"
    record: "vpn-ui.{{ config.domain }}"
    type: A
    value: "{{ config.ip }}"
    api_token: "{{ config.cloudflare.api_key }}"
  delegate_to: localhost

- name: create directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: pi
    group: pi
    state: directory
  loop:
    - /mnt/gluster/vpn-ui/db
    - /mnt/gluster/vpn-ui/wireguard

- name: vpn-ui session secret
  community.general.docker_secret:
    name: vpn_ui_session_secret
    data: "{{ config.vpn_ui.session_secret }}"
    rolling_versions: true
  register: vpn_ui_session_secret

- name: deploy stack
  community.general.docker_stack:
    name: vpn-ui
    prune: yes
    resolve_image: always
    compose:
      - version: '3.8'
        services:
          vpn-ui:
            image: ngoduykhanh/wireguard-ui:0.6.2@sha256:f1c8397c1f7bd955cc70fb0dfcc18d36b68cab5ac19771d8e2188987404282ac
            secrets:
              - vpn_ui_session_secret
            environment:
              SESSION_SECRET_FILE: /run/secrets/vpn_ui_session_secret
              SUBNET_RANGES: "{{ config.vpn_ui.subnet_ranges }}"
              WGUI_ENDPOINT_ADDRESS: "{{ config.domain }}"
              WGUI_MTU: ""
              WGUI_PERSISTENT_KEEPALIVE: ""
              WGUI_FIREWALL_MARK: "{{ config.vpn_ui.firewall_mark }}"
              WGUI_TABLE: ""
              WGUI_SERVER_LISTEN_PORT: "{{ config.vpn_ui.server_listen_port }}"
              WGUI_DEFAULT_CLIENT_ALLOWED_IPS: "{{ config.vpn_ui.default_client_allowed_ips }}"
            networks:
              - traefik_traefik
            volumes:
              - /mnt/gluster/vpn-ui/db:/app/db
              - /etc/wireguard:/etc/wireguard
            deploy:
              mode: replicated
              replicas: 1
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.vpn-ui.rule=Host(`vpn-ui.{{ config.domain }}`)"
                - "traefik.http.routers.vpn-ui.middlewares=traefik-internal,traefik-forward-auth"
                - "traefik.http.routers.vpn-ui.entrypoints=websecure"
                - "traefik.http.routers.vpn-ui.tls.certresolver=letsencrypt"
                - "traefik.http.services.vpn-ui.loadbalancer.server.port=5000"
              placement:
                constraints:
                  - 'node.role == manager'
                  - 'node.labels.home.storage == external'
              resources:
                limits:
                  cpus: '1.00'
                  memory: 100M
              restart_policy:
                delay: 10m
              update_config:
                order: stop-first
        secrets:
          vpn_ui_session_secret:
            external: true
            name: "{{ vpn_ui_session_secret.secret_name }}"
        networks:
          traefik_traefik:
            external: true
