---

- name: install
  ansible.builtin.apt:
    name:
      - wireguard
  notify: vpn_restart

- name: ipv4 forward
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: yes
  notify: vpn_restart
  when: vpn_ip_forward

- name: ipv6 forward
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: '1'
    state: present
    reload: yes
  notify: vpn_restart
  when: vpn_ip_forward

- name: create configuration directory
  ansible.builtin.file:
    path: /etc/systemd/system/wg-quick@.service.d
    owner: root
    group: root
    state: directory
  notify: vpn_restart

- name: check configuration
  ansible.builtin.stat:
    path: /etc/wireguard/wg1.conf
  register: wg1_config

- name: configure
  ansible.builtin.copy:
    content: "{{ vpn_config }}"
    dest: /etc/wireguard/wg1.conf
    owner: root
    group: root
    mode: u=rw,g=,o=
  notify: vpn_restart
  when: not vpn_ui_config or not wg1_config.stat.exists

- name: configure service
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg-quick@.service.d/override.conf
    content: |
      [Unit]
      StartLimitIntervalSec=0

      [Service]
      Restart=on-failure
      RestartSec=5s
  notify: vpn_restart

- ansible.builtin.blockinfile:
    path: /etc/nftables.conf
    block: |
      add table wireguard-nat

      table ip wireguard-nat {
        chain prerouting {
          type nat hook prerouting priority -100; policy accept;
        }

        chain postrouting {
          type nat hook postrouting priority 100; policy accept;
          oifname "eth0" masquerade
        }
      }
  notify: vpn_restart
  when: vpn_ip_forward

- name: enable nftables
  ansible.builtin.systemd:
    name: nftables
    enabled: true
  when: vpn_ip_forward

- name: enable wireguard
  ansible.builtin.systemd:
    name: wg-quick@wg1.service
    enabled: true
    daemon_reload: true

- name: configure reresolve dns service
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg1-reresolve-dns.service
    content: |
      [Unit]
      Description=Reresolve DNS wg1 service
      After=wg-quick@wg1.service

      [Service]
      Type=oneshot
      ExecStart=/usr/share/doc/wireguard-tools/examples/reresolve-dns/reresolve-dns.sh wg1
  notify: wg1_reresolve_dns_timer_restart

- name: configure reresolve dns timer
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg1-reresolve-dns.timer
    content: |
      [Unit]
      Description=Reresolve DNS wg1

      [Timer]
      OnCalendar=*-*-* *:*:00
      RandomizedDelaySec=30s
      Persistent=true

      [Install]
      WantedBy=timers.target
  notify: wg1_reresolve_dns_timer_restart

- name: enable reresolve dns timer
  ansible.builtin.systemd:
    name: wg1-reresolve-dns.timer
    enabled: true
  notify: wg1_reresolve_dns_timer_restart

- name: configure restart service
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg1-restart.service
    content: |
      [Unit]
      Description=Restart wg1 service
      After=wg-quick@wg1.service

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/systemctl restart wg-quick@wg1.service
  notify: wg1_timer_restart

- name: configure restart timer
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg1-restart.timer
    content: |
      [Unit]
      Description=Daily wg1 restart

      [Timer]
      OnCalendar=*-*-* 6,18:00
      RandomizedDelaySec=12h
      Persistent=true

      [Install]
      WantedBy=timers.target
  notify: wg1_timer_restart

- name: enable restart timer
  ansible.builtin.systemd:
    name: wg1-restart.timer
    enabled: true
  notify: wg1_timer_restart

- name: configure sync service
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg1-sync.service
    content: |
      [Unit]
      Description=Sync wg1 config
      After=wg-quick@wg1.service

      [Service]
      Type=oneshot
      ExecStart=/bin/bash -c '/usr/bin/wg syncconf wg1 <(/usr/bin/wg-quick strip wg1)'
  notify: wg1_sync_restart
  when: vpn_ui_config

- name: configure sync path
  ansible.builtin.copy:
    dest: /etc/systemd/system/wg1-sync.path
    content: |
      [Unit]
      Description=Watch wg1 config

      [Path]
      PathModified=/etc/wireguard/wg1.conf

      [Install]
      WantedBy=multi-user.target
  notify: wg1_sync_restart
  when: vpn_ui_config

- name: enable sync path
  ansible.builtin.systemd:
    name: wg1-sync.path
    enabled: true
  notify: wg1_sync_restart
  when: vpn_ui_config

- name: set dns record
  community.general.cloudflare_dns:
    zone: "{{ config.cloudflare.zone }}"
    record: "{{ vpn_dns_name }}"
    type: A
    value: "{{ vpn_ip }}"
    api_token: "{{ config.cloudflare.api_key }}"
  delegate_to: localhost
